{"version":3,"sources":["utils/socketConnections.js","utils/canvasLoadAnimation.js","components/Cpu.js","components/Mem.js","components/Info.js","components/Widget.js","App.js","index.js"],"names":["socket","io","connect","emit","console","log","drawCircle","canvas","currentLoad","context","getContext","clearRect","fillStyle","beginPath","arc","Math","PI","closePath","fill","lineWidth","strokeStyle","stroke","Cpu","props","createRef","cpuLoad","this","cpuData","current","className","ref","width","height","Component","Mem","memData","totalMem","memUsage","freeMem","totalMemInGb","toFixed","freeMemInGb","ceil","Info","infoData","osType","moment","duration","upTime","humanize","cpuModel","numCores","cpuSpeed","Widget","state","notActiveDiv","data","macA","usedMem","isActive","cpu","mem","info","App","performanceData","on","currentState","setState","widgets","Object","entries","forEach","key","value","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05434489.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\nlet socket = io.connect('/');\r\n\r\nsocket.emit('clientAuth', '23sdsad232');\r\n\r\nconsole.log(socket);\r\n \r\nexport default socket;\r\n","function drawCircle(canvas, currentLoad) {\r\n\tif (canvas) {\r\n\t\tlet context = canvas.getContext('2d');\r\n\t\t// Draw Inner Circle\r\n\t\tcontext.clearRect(0, 0, 500, 500); // clear the bar\r\n\t\tcontext.fillStyle = '#ccc';\r\n\t\tcontext.beginPath();\r\n\t\tcontext.arc(100, 100, 90, Math.PI * 0, Math.PI * 2);\r\n\t\tcontext.closePath();\r\n\t\tcontext.fill();\r\n\r\n\t\t// Draw the outter line\r\n\t\t// 10px wide line\r\n\t\tcontext.lineWidth = 10;\r\n\t\tif (currentLoad < 20) {\r\n\t\t\tcontext.strokeStyle = '#00ff00';\r\n\t\t} else if (currentLoad < 40) {\r\n\t\t\tcontext.strokeStyle = '#337ab7';\r\n\t\t} else if (currentLoad < 60) {\r\n\t\t\tcontext.strokeStyle = '#f0ad4e';\r\n\t\t} else {\r\n\t\t\tcontext.strokeStyle = '#d9534f';\r\n\t\t}\r\n\t\tcontext.beginPath();\r\n\t\tcontext.arc(\r\n\t\t\t100,\r\n\t\t\t100,\r\n\t\t\t95,\r\n\t\t\tMath.PI * 1.5,\r\n\t\t\t(Math.PI * 2 * currentLoad) / 100 + Math.PI * 1.5\r\n\t\t);\r\n\t\tcontext.stroke();\r\n\t}\r\n}\r\n\r\nexport default drawCircle;\r\n","import React, { Component, createRef } from 'react';\r\nimport drawCircle from '../utils/canvasLoadAnimation';\r\n\r\nclass Cpu extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.canvas = createRef();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst cpuLoad = this.props.cpuData.cpuLoad;\r\n\t\tdrawCircle(this.canvas.current, cpuLoad);\r\n\t\treturn (\r\n\t\t\t<div className=\"cpu-load\">\r\n\t\t\t\t<h3>CPU Load</h3>\r\n\t\t\t\t<div className=\"canvas-wrapper\">\r\n\t\t\t\t\t<canvas\r\n\t\t\t\t\t\tclassName=\"canvas\"\r\n\t\t\t\t\t\tref={this.canvas}\r\n\t\t\t\t\t\twidth=\"200\"\r\n\t\t\t\t\t\theight=\"200\"></canvas>\r\n\t\t\t\t\t<span className=\"cpu-text\">{cpuLoad}%</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Cpu;\r\n","import React, { Component, createRef } from 'react';\r\nimport drawCircle from '../utils/canvasLoadAnimation';\r\n\r\nclass Mem extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.canvas = createRef();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { totalMem, memUsage, freeMem } = this.props.memData;\r\n\t\tconst gbPerBytes = 1073741824;\r\n\t\tconst totalMemInGb = (totalMem / gbPerBytes).toFixed(0);\r\n\t\tconst freeMemInGb = (freeMem / gbPerBytes).toFixed(2);\r\n\t\tdrawCircle(this.canvas.current, memUsage * 100);\r\n\t\treturn (\r\n\t\t\t<div className=\"memory-usage\">\r\n\t\t\t\t<h3>Memory usage</h3>\r\n\t\t\t\t<div className=\"canvas-wrapper\">\r\n\t\t\t\t\t<canvas\r\n\t\t\t\t\t\tclassName=\"memCanvas\"\r\n\t\t\t\t\t\twidth=\"200\"\r\n\t\t\t\t\t\theight=\"200\"\r\n\t\t\t\t\t\tref={this.canvas}></canvas>\r\n\t\t\t\t\t<span className=\"mem-text\">{Math.ceil(memUsage * 100)}%</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className=\"widget-text\">Total Memory: {totalMemInGb}gb</span>\r\n\t\t\t\t<span className=\"widget-text\">Free Memory: {freeMemInGb}gb</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Mem;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Info = props => {\r\n\treturn (\r\n\t\t<div className=\"cpu-info\">\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Operating System</h3>\r\n\t\t\t\t<span className=\"widget-text\">{props.infoData.osType}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Time Online</h3>\r\n\t\t\t\t<span className=\"widget-text\">\r\n\t\t\t\t\t{moment.duration(props.infoData.upTime).humanize()}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"more-info\">\r\n\t\t\t\t<h3>Processor information</h3>\r\n\t\t\t\t<span className=\"widget-text\">\r\n\t\t\t\t\t<strong>Type:</strong> {props.infoData.cpuModel}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"widget-text\">\r\n\t\t\t\t\t<strong>Number of Cores:</strong> {props.infoData.numCores}\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"widget-text\">\r\n\t\t\t\t\t<strong>Clock Speed:</strong> {props.infoData.cpuSpeed}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport Cpu from './Cpu';\r\nimport Mem from './Mem';\r\nimport Info from './Info';\r\nimport '../styles/widget.css';\r\n\r\nexport default class Widget extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tmacA,\r\n\t\t\tfreeMem,\r\n\t\t\ttotalMem,\r\n\t\t\tusedMem,\r\n\t\t\tmemUsage,\r\n\t\t\tosType,\r\n\t\t\tupTime,\r\n\t\t\tcpuModel,\r\n\t\t\tnumCores,\r\n\t\t\tcpuSpeed,\r\n\t\t\tcpuLoad,\r\n\t\t\tisActive\r\n\t\t} = this.props.data;\r\n\t\tconst cpu = { cpuLoad };\r\n\t\tconst mem = { totalMem, usedMem, memUsage, freeMem };\r\n\t\tconst info = { macA, osType, upTime, cpuModel, numCores, cpuSpeed };\r\n\r\n\t\tlet notActiveDiv;\r\n\r\n\t\tif (!isActive) {\r\n\t\t\tnotActiveDiv = <div className=\"not-active\">Offline</div>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={`widget ${isActive ? null : 'offline'}`}>\r\n\t\t\t\t{notActiveDiv}\r\n\t\t\t\t<Cpu cpuData={cpu} />\r\n\t\t\t\t<Mem memData={mem} />\r\n\t\t\t\t<Info infoData={info} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport socket from './utils/socketConnections';\r\nimport Widget from './components/Widget';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tperformanceData: {}\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tsocket.on('data', data => {\r\n\t\t\t// received new data\r\n\t\t\t// Update state to rerender components\r\n\t\t\t// State is object for easy finding key vaLue pairs\r\n\t\t\tconst currentState = { ...this.state.performanceData };\r\n\t\t\t// Each performance data is per computer via mac address\r\n\t\t\tcurrentState[data.macA] = data;\r\n\t\t\tthis.setState({\r\n\t\t\t\tperformanceData: currentState\r\n\t\t\t});\r\n\t\t\tconsole.log(this.state.performanceData);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet widgets = [];\r\n\t\tconst data = this.state.performanceData;\r\n\t\t// grab each machine , by property, from data\r\n\t\t// Return [[key, value]]\r\n\t\tObject.entries(data).forEach(([key, value]) => {\r\n\t\t\t// Fill widgets array with components\r\n\t\t\twidgets.push(<Widget key={key} data={value} />);\r\n\t\t});\r\n\t\treturn <div className=\"App\">{widgets}</div>;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}